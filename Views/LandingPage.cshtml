@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.LandingPage>
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    Layout = "vMaster.cshtml";

    var fOptions = "&tint=255,255,255,165";
}

<html>
<head>
    <style>
        h1, h2, h3, p {
            color: rgba(6, 25, 68, 100);
        }

        img {
            max-width: 100%;
            /*max-height: 100%;*/
        }

        .landing-container {
            position: relative !important;
        }

        .landing-text {
            position: absolute;
            bottom: 5%;
            text-align: center !important;
        }

        .landing-text-1 {
            position: absolute;
            bottom: 50%;
            top: 50%;
            margin-left: 5px;
            margin-right: 15px;
        }

        a {
            font-size: 12px;
        }

            a.header-link {
                font-size: initial;
                color: #115f85;
            }


        .landing-button {
            background-color: #fff !important;
            color: rgba(6, 25, 6, 100) !important;
            border-radius: 30px !important;
        }

        h2 {
            font-size: 15px;
        }

        p {
            font-size: 12px;
        }

        h3 {
            font-size: 18px;
        }

        @@media only screen and (max-width: 768px) {
            /*p {
                font-size: 26px !important;
            }*/

            h3 {
                font-size: 30px;
            }
        }


        @@media only screen and (min-width: 768px) {


            h2 {
                font-size: 20pt;
            }

            .landing-text p {
                bottom: 10%;
                margin-left: 5px;
                margin-right: 20px;
            }

            p {
                font-size: 18px;
            }

            h3 {
                font-size: 23px;
            }
        }
    </style>
</head>
<body>
    @Html.Partial("Layout/CampusNavigation")



    <div id="carouselFeatured" class="carousel slide" data-interval="5000" data-ride="carousel" @*data-wrap="false"*@>
        <div class="carousel-inner">
            @{
                var typedMultiNodeTreePicker = Umbraco.Content(new Guid("4fd64fc5-5bf0-4d02-9663-c44deb861992")).Value<IEnumerable<IPublishedContent>>("featuredTiles");
                foreach (var item in typedMultiNodeTreePicker)
                {

                    var active = item == typedMultiNodeTreePicker.First() ? " active" : "";
                    var featuredContentTile = item as DtContentTile;
                    <div class="carousel-item@(active)">
                        @renderFeaturedTile(featuredContentTile, "primary", fOptions, true)
                    </div>
                }
            }

        </div>
        <a class="carousel-control-prev" href="#carouselFeatured" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselFeatured" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>

    <div class="row pt-5">
        <div class="col-12 text-center">
            <h1><b>OECS Campus</b></h1>
            <h2>Explore the OECS Learning Resource Centre database and online learning Academy.</h2>
        </div>
    </div>



    <div class="row pt-5">
        <div class="col-12 col-lg-6 landing-container mb-3 mb-lg-0">
            <img src="~/oecs-lrc-big.png" />
            <div class="landing-text-1 text-center my-auto">
                <p class="mb-sm-0">Find teaching and learning resources including videos, webinars, infographics and a range of public, professional and paid for courses.</p>
                <a class="btn landing-button px-3 mt-md-3" href="https://lrc.oecs.int/" target="_blank">
                    <p class="m-auto">
                        Go to the LRC &#10141;
                    </p>
                </a>
            </div>
        </div>
        <div class="col-12 col-lg-6 landing-container">
            <img src="~/oecs-academy-big.png" />
            <div class="text-center my-auto">
                <div class="landing-text-1 ">
                    <p class="mb-sm-0">
                        Create your free account and take self-study courses in a range of topics developed by the OECS.
                    </p>
                    <a class="btn landing-button px-3 mt-md-3" style="bottom: 0% !important;" href="https://academy.oecs.int/" target="_blank">
                        <p class="m-auto">Go to the Academy &#10141; </p>
                    </a>
                </div>
            </div>
        </div>
    </div>

</body>
</html>

@helper renderThemeIcon(string TileType, int? sizeMultiple)
{
    if (TileType == "External Link")
    {
        TileType = "Web Link";
    }

    var svgType = $"icon-{TileType.Replace(" ", "-").ToLower()}";
    <svg class="icon @(svgType)@(sizeMultiple!= null ? $" x{sizeMultiple}-icon":"")">
        <use xlink:href="/thinkblue-icons.svg#@(svgType)"></use>
    </svg>
    <span class="sr-only">@(TileType)</span>
}

@helper renderFeaturedTile(DtContentTile item, string style, string fOptions, bool hero)
{

    var heroClass = hero ? "" : " col-md-8 col-lg-6";
    var aspect = hero ? "Landscape" : "Landscape";
    var bgstyle = item.BannerImage != null ? "" : $" bg-{style}";
    var forcedheight = item.BannerImage != null ? "" : " min-vh-30";
    var url = "https://lrc.oecs.int" + item.Url;

    <div class="col-12 col-xs-12@(heroClass) p-2">
        <div class="card@(bgstyle) border-0@(forcedheight)">
            <a class="text-white" href="@(url)" target="_blank" @(item.TileType == "Video" ? $"data-key={@item.Key} " : "") title="@(item.Name)">
                @if (item.BannerImage != null)
                {
                    <picture>
                        <source srcset="@(item.BannerImage.GetCropUrl(cropAlias: aspect, width: hero?1200:960, furtherOptions:fOptions))" media="(min-width: 1200px)" />
                        <source srcset="@(item.BannerImage.GetCropUrl(cropAlias: aspect, width: hero?1200:600, furtherOptions:fOptions))" media="(min-width: 996px)" />
                        <source srcset="@(item.BannerImage.GetCropUrl(cropAlias: aspect, width: hero?996:576, furtherOptions:fOptions))" media="(min-width: 576px)" />
                        <img srcset="@(item.BannerImage.GetCropUrl(cropAlias: aspect , width: 576,furtherOptions:fOptions))" alt="@(item.BannerImage.Name)" class="card-img-top rounded" />
                    </picture>
                }
                <div class="card-img-overlay d-flex flex-column justify-content-end text-white p-1 rounded">
                    @if (item.BannerImage != null)
                    {
                        <div class="text-white mb-auto p-2">@renderThemeIcon(item.TileType, 2)</div>
                    }
                    else
                    {
                        <div class="text-white text-center mb-auto mt-auto p-2">@renderThemeIcon(item.TileType, 4)</div>
                    }
                    <div class="p-2 w-100 rounded-bottom text-white">
                        <p class="card-text mb-1 text-white">@(item.Parent.Name.ToUpper())</p>
                        <h3 class="card-title text-white">@(item.Name)</h3>
                    </div>
                </div>
            </a>
        </div>
    </div>
}