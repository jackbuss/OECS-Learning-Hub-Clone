@*@model TWS.ThinkBlue.Models.SearchViewModel*@
@inherits Umbraco.Web.Mvc.UmbracoViewPage<TWS.ThinkBlue.Models.SearchViewModel>
@using ClientDependency.Core.Mvc
@{
    Html.RequiresJs("~/js/vendor/jquery.validate-1.19.0.min.js")
        .RequiresJs("~/js/vendor/jquery.validate.unobtrusive-3.2.11.min.js")
        .RequiresJs("~/js/vendor/jquery.unobtrusive-ajax-3.2.6.min.js")
        .RequiresJs("~/js/vendor/isInViewport-3.0.4.js")
     .RequiresJs("~/Scripts/search.js");

    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    List<String> economy = new List<String> { "Agriculture and Fisheries", "Blue Economy", "Tourism", "Trade" };
    List<String> environment = new List<String> { "Biodiversity", "Climate Change", "Energy", "Oceans" };
    List<String> social = new List<String> { "Education", "Health", "Social Protection", "Youth", };

}

@using (Ajax.BeginForm("SubmitSearchForm", "Search", null, new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "search-results"
}, new Dictionary<string, object> { { "id", "menu-search-form" }, { "class", "my-0" } }))
{
    @Html.HiddenFor(m => m.DocTypeAliases)
    @Html.HiddenFor(m => m.FieldPropertyAliases)
    @Html.HiddenFor(m => m.PageSize)
    @Html.AntiForgeryToken();

    <div class="input-group mb-2">
        @Html.LabelFor(m => m.SearchTerm, "What would you like to search for?", new { @class = "sr-only" })
        @Html.TextBoxFor(m => m.SearchTerm, new { placeholder = "Search for learning resources from the OECS", @class = "form-control search-text", autocomplete = "off" })
    </div>

    <div id="search-filters" class="row pt-2">
        <div class="col-12 col-md-3 mx-auto text-center p-0">
            <div class="text-primary custom-control custom-radio vertical-align-items d-inline-block top-button-width mx-auto p-0">
                @Html.RadioButtonFor(m => m.Browse, "tileTheme|Economic Affairs", new { id = "Economic_Affairs", @class = "custom-control-input button-radio economy-button" })
                <label for="Economic_Affairs" class="w-100 align-items-center header-label text-white mx-auto px-5 economy-button-label">
                    Economy
                </label>
            </div>
            @*<button type="button" id="Economy" name="Browse" value="tileType|Course" class="filter-button btn oecs-info text-white mx-auto navbutton">Economy</button>*@
        </div>
        <div class="col-12 col-md-3 mx-auto text-center p-0">
            <div class="text-primary custom-control custom-radio vertical-align-items d-inline-block top-button-width mx-auto p-0">
                @Html.RadioButtonFor(m => m.Browse, "tileTheme|Environmental Sustainability", new { id = "Environmental_Sustainability", @class = "custom-control-input button-radio environment-button" })
                <label for="Environmental_Sustainability" class="w-100 align-items-center header-label text-white mx-auto environment-button-label">
                    Environment
                </label>
            </div>
            @*<button type="button" class="btn oecs-info text-white mx-auto navbutton">Environment</button>*@
        </div>
        <div class="col-12 col-md-3 mx-auto text-center p-0">
            <div class="text-primary custom-control custom-radio vertical-align-items d-inline-block top-button-width mx-auto p-0">
                @Html.RadioButtonFor(m => m.Browse, "tileTheme|Human and Social", new { id = "Human_and_Social", @class = "custom-control-input button-radio social-button" })
                <label for="Human_and_Social" class="w-100 align-items-center header-label text-white mx-auto social-button-label">
                    Social
                </label>
            </div>
            @*<button type="button" class="btn oecs-info text-white mx-auto navbutton">Social</button>*@
        </div>
        <div class="col-12 col-md-3 mx-auto text-center p-0">
            <div class="text-primary custom-control custom-radio vertical-align-items d-inline-block top-button-width mx-auto p-0">
                @Html.RadioButtonFor(m => m.Browse, "", new { id = "viewall", @class = "custom-control-input button-radio resources-button" })
                <label for="viewall" class="w-100 align-items-center header-label text-white mx-auto resources-button-label">
                    Resources
                </label>
            </div>
            @*<button type="button" class="btn oecs-info text-white mx-auto navbutton">Projects</button>*@
        </div>
    </div>


    <div class="collapse text-primary" id="search-form-wrapper" data-parent="#topNavigation  ">
        <div id="search-filters" class="collapse show">
            @*renderBrowseOptions(Model.SearchThemes, true, "Project", "tileTheme")*@
            @renderCustomOptions(economy, "Economic Affairs")
            @renderCustomOptions(environment, "Environment Sustainability")
            @renderCustomOptions(social, "Human and Social")
            @renderBrowseOptions(Model.SearchTypes, false, "Resources", "tileType")
            @*renderBrowseOptions(Model.SearchPersonas, false, "Interest", "tilePersonna")*@
        </div>
    </div>

    <div class="collapse text-primary green-collapse" id="economy-collapse" data-parent="#topNavigation  ">
        <div id="search-filters" class="collapse show">
            @renderCustomOptions(economy, "Economic Affairs")
        </div>
    </div>

    <div class="collapse text-primary green-collapse" id="environment-collapse" data-parent="#topNavigation  ">
        <div id="search-filters" class="collapse show">
            @renderCustomOptions(environment, "Environment Sustainability")
        </div>
    </div>

    <div class="collapse text-primary green-collapse" id="social-collapse" data-parent="#topNavigation  ">
        <div id="search-filters" class="collapse show">
            @renderCustomOptions(social, "Human and Social")
        </div>
    </div>

    <div class="collapse text-primary green-collapse" id="resources-collapse" data-parent="#topNavigation  ">
        <div id="search-filters" class="collapse show">
            @renderBrowseOptions(Model.SearchTypes, false, "Resources", "tileType")
        </div>
    </div>

    @*<button id="search-button" class="btn btn-primary float-right mt-2 mb-2" type="submit">Explore</button>*@
}

@helper renderThemeIcon(string TileType, int? sizeMultiple)
{
    if (TileType == "External Link")
    {
        TileType = "Web Link";
    }

    var svgType = $"icon-{TileType.Replace(" ", "-").ToLower()}";
    <svg class="icon @(svgType)@(sizeMultiple!= null ? $" x{sizeMultiple}-icon":"")">
        <use xlink:href="/thinkblue-icons.svg#@(svgType)"></use>
    </svg>
    <span class="sr-only">@(TileType)</span>
}

@helper renderCustomOptions(List<String> list, String title)
{

    if (list.Any())
    {
        <div class="card border-0 bg-transparent pt-2">
            <div class="bg-white pl-2" id="heading@(title)">
                <p class="mb-0 font-weight-bold">@(title)</p>
            </div>
            <div aria-labelledby="heading@(title)">
                <div class="card-body pt-1 pb-1">
                    <div class="row p-1">
                        @for (int i = 0; i < list.Count; i++)
                        {
                            string filterValue = $"tilePersonna|{list[i]}";
                            <div class="col-6 col-sm-6 col-md-4 col-lg-3 p-0">
                                <div class="text-primary custom-control custom-radio vertical-align-items d-inline-block">
                                    @Html.RadioButtonFor(m => m.Browse, filterValue, new { id = list[i].Replace(" ", "_"), @class = "custom-control-input" })

                                    <label for="@list[i].Replace(" ","_")" class="w-100 align-items-center custom-control-label">
                                        @(list[i])
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

}

@helper renderBrowseOptions(List<TWS.ThinkBlue.Models.FilterModel> filterList, bool isImage, string title, string field)
{
    if (filterList.Any())
    {
        <div class="card border-0 bg-transparent pt-2">
            <div class="bg-white pl-2" id="heading@(title)">
                <p class="mb-0 font-weight-bold">Filter by @(title)</p>
            </div>
            <div aria-labelledby="heading@(title)">
                <div class="card-body pt-1 pb-1">
                    <div class="row p-1">
                        @for (int i = 0; i < filterList.Count; i++)
                        {
                            string filterValue = $"{field}|{filterList[i].Value}";
                            <div class="col-6 col-sm-6 col-md-4 col-lg-3 p-0">
                                <div class="text-primary custom-control custom-radio vertical-align-items d-inline-block">
                                    @Html.RadioButtonFor(m => m.Browse, filterValue, new { id = filterList[i].Value.Replace(" ", "_"), @class = "custom-control-input" })

                                    <label for="@filterList[i].Value.Replace(" ","_")" class="w-100 align-items-center custom-control-label">
                                        @(filterList[i].Value)
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}
