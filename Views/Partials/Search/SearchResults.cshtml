@inherits UmbracoViewPage<TWS.ThinkBlue.Models.SearchResultsModel>

@if (Model != null)
{
    if (Model.HasResults)
    {
        <div class="row mb-2 mt-2">
            <div class="col">
                @if (Model.Suggestions)
                {
                <p>Your search for <strong>@Model.SearchTerm</strong> returned no results</p>
                <p>Showing Suggestions</p>
                }
                else if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                {
                <p>Your search for <strong>@Model.SearchTerm</strong> returned @Model.TotalItemCount result@(Model.TotalItemCount != 1 ? "s" : null)</p>
                }
            </div>
        </div>


        <div class="row mb-2 mt-2">
            <div class="col">
                @RenderPagingButtons(Model.PagingBounds, Model.PageNumber, Model.PageCount)
            </div>
        </div>

        <div class="row card-deck">
            @foreach (IPublishedContent result in Model.Results)
            {
                var item = result as DtContentTile;
                <div class="col-md-4 col-sm-6 p-sm-0">
                    <div class="card mb-2">
                        <div class="card-header">
                            @(item.Name)
                        </div>
                        <img class="card-img-top" src="@(item.BannerImage.GetCropUrl("Landscape"))" alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title">@(item.Name)</h5>
                            <p class="card-text">@(item.MetaDescription)</p>
                        </div>
                        <div class="card-footer">
                            <a class="btn btn-primary" href="@item.Url" data-toggle="modal" data-target="#modal" title="@(item.Name)">View More</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        // need to show suggested results.
        <p>No results to display</p>
    }
}

@helper RenderPagingButtons(TWS.ThinkBlue.Models.PagingBoundsModel pagingBounds, int pageNumber, int pageCount)
{
    <nav aria-label="paged navigation">
        <ul class="pagination">
            @if (pagingBounds.ShowFirstButton)
            {
                <li class="page-item">
                    <button class="page-link" name="page-1" aria-label="First"><span aria-hidden="true">&laquo;</span><span class="sr-only">First</span></button>
                </li>
            }

            @if (pageNumber > 1)
            {
                <li class="page-item">
                    <button class="page-link" name="page-@(pageNumber - 1)" aria-label="Previous"><span aria-hidden="true">&lsaquo;</span><span class="sr-only">Previous</span></button>
                </li>
            }

            @if (pagingBounds.StartPage != pagingBounds.EndPage)
            {
                for (int i = pagingBounds.StartPage; i <= pagingBounds.EndPage; i++)
                {
                    <li class="page-item@(i == pageNumber ? " active" : null)">
                        <button name="page-@i" class="page-link" aria-label="page @(i)">
                            @i@if (i == pageNumber)
                            {<span class="sr-only">(current)</span>}
                        </button>
                    </li>
                }
            }

            @if (pageNumber < pageCount)
            {
                <li class="page-item">
                    <button class="page-link" name="page-@(pageNumber + 1)" aria-label="Next"><span aria-hidden="true">&rsaquo;</span><span class="sr-only">Next</span></button>
                </li>
            }

            @if (pagingBounds.ShowLastButton)
            {
                <li class="page-item">
                    <button class="page-link" name="page-@(pageCount)" aria-label="Last"><span aria-hidden="true">&raquo;</span><span class="sr-only">Last</span></button>
                </li>
            }
        </ul>
    </nav>
}
