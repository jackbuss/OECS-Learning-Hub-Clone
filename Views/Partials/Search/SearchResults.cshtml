@inherits UmbracoViewPage<TWS.ThinkBlue.Models.SearchResultsModel>
<div id="search-results">

    @if (Model != null)
    {
        if (Model.HasResults)
        {
            <div class="row mb-2 mt-2">
                <div class="col">
                    @if (Model.Suggestions)
                    {
                        <p>Your search for <strong>@Model.SearchTerm</strong> returned no results, why not try &hellip;</p>
                    }
                    else if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                    {
                        <p>Your search for <strong>@Model.SearchTerm</strong> returned @Model.TotalItemCount result@(Model.TotalItemCount != 1 ? "s" : null)</p>
                    }
                </div>
            </div>

            <div class="row card-deck">
                @*Initial hero content*@
                @foreach (IPublishedContent result in Model.Results)
                {
                    var item = result as DtContentTile;

                    <div class="col-md-4 col-sm-6 p-sm-0 col-xs-6">
                        <div class="card mb-2">
                            <div class="card-header d-flex justify-content-between">
                                @(item.Parent.Name)@renderThemeIcon(item.TileType)
                            </div>
                            @if (item.BannerImage != null)
                            {
                                <img class="card-img-top" src="@(item.BannerImage.GetCropUrl("Landscape"))" alt="Card image cap">
                            }
                            <div class="card-body">
                                <h5 class="card-title">@(item.Name)</h5>
                                <p class="card-text">@(item.MetaDescription)</p>
                            </div>
                            <div class="card-footer">
                                <a class="btn btn-primary" href="@item.Url" data-toggle="modal" data-target="#modal" title="@(item.Name)">View More</a>
                            </div>
                        </div>
                    </div>

                }
            </div>


            <div class="row mb-2 mt-2">
                <div class="col">
                    @RenderLoadMore(Model.PagingBounds, Model.PageNumber, Model.PageCount)
                </div>
            </div>
        }
        else
        {
            // need to show suggested results.
            <p>No results to display</p>
        }
    }

</div>
@helper RenderLoadMore(TWS.ThinkBlue.Models.PagingBoundsModel pagingBounds, int pageNumber, int pageCount)
{
    <nav aria-label="paged navigation">
        <ul class="pagination justify-content-center">
            @if (pageNumber < pageCount)
            {
                <li class="page-item">
                    <button id="next-button" class="page-link" name="page-@(pageNumber + 1)" aria-label="Next"><span aria-hidden="true">Load More</span><span class="sr-only">Load More</span></button>
                </li>

            }
        </ul>
    </nav>

}

@helper RenderPagingButtons(TWS.ThinkBlue.Models.PagingBoundsModel pagingBounds, int pageNumber, int pageCount)
{
    <nav aria-label="paged navigation">
        <ul class="pagination justify-content-center">
            @if (pagingBounds.ShowFirstButton)
            {
                <li class="page-item">
                    <button class="page-link" name="page-1" aria-label="First"><span aria-hidden="true">&laquo;</span><span class="sr-only">First</span></button>
                </li>
            }

            @if (pageNumber > 1)
            {
                <li class="page-item">
                    <button class="page-link" name="page-@(pageNumber - 1)" aria-label="Previous"><span aria-hidden="true">&lsaquo;</span><span class="sr-only">Previous</span></button>
                </li>
            }

            @if (pagingBounds.StartPage != pagingBounds.EndPage)
            {
                for (int i = pagingBounds.StartPage; i <= pagingBounds.EndPage; i++)
                {
                    <li class="page-item@(i == pageNumber ? " active" : null)">
                        <button name="page-@i" class="page-link" aria-label="page @(i)">
                            @i@if (i == pageNumber)
                            {<span class="sr-only">(current)</span>}
                        </button>
                    </li>
                }
            }

            @if (pageNumber < pageCount)
            {
                <li class="page-item">
                    <button class="page-link" name="page-@(pageNumber + 1)" aria-label="Next"><span aria-hidden="true">&rsaquo;</span><span class="sr-only">Next</span></button>
                </li>
            }

            @if (pagingBounds.ShowLastButton)
            {
                <li class="page-item">
                    <button class="page-link" name="page-@(pageCount)" aria-label="Last"><span aria-hidden="true">&raquo;</span><span class="sr-only">Last</span></button>
                </li>
            }
        </ul>
    </nav>
}

@helper renderThemeIcon(string TileType)
{
    <svg width="24" height="24" class="octicon" viewBox="0 0 16 16" version="1.1" aria-hidden="true">
        <title>@(TileType)</title>
        @{ switch (TileType.ToLower())
            {
                case "course":
                    <path fill-rule="evenodd" d="M15 0H9v7c0 .55.45 1 1 1h1v1h1V8h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 7h-1V6h1v1zm4 0h-3V6h3v1zm0-2h-4V1h4v4zM4 5H3V4h1v1zm0-2H3V2h1v1zM2 1h6V0H1C.45 0 0 .45 0 1v12c0 .55.45 1 1 1h2v2l1.5-1.5L6 16v-2h5c.55 0 1-.45 1-1v-3H2V1zm9 10v2H6v-1H3v1H1v-2h10zM3 8h1v1H3V8zm1-1H3V6h1v1z"></path>
                    break;
                case "e-book":
                    <path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"></path>
                    break;
                case "event":
                    <path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"></path>
                    break;
                case "network":
                    <path fill-rule="evenodd" d="M10 7c-.73 0-1.38.41-1.73 1.02V8C7.22 7.98 6 7.64 5.14 6.98c-.75-.58-1.5-1.61-1.89-2.44A1.993 1.993 0 0 0 2 .99C.89.99 0 1.89 0 3a2 2 0 0 0 1 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2a1.993 1.993 0 0 0 1-3.72V7.67c.67.7 1.44 1.27 2.3 1.69.86.42 2.03.63 2.97.64v-.02c.36.61 1 1.02 1.73 1.02 1.11 0 2-.89 2-2 0-1.11-.89-2-2-2zm-6.8 6c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm8 6c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path>
                    break;
                case "news":
                    <path fill-rule="evenodd" d="M10 1c-.17 0-.36.05-.52.14C8.04 2.02 4.5 4.58 3 5c-1.38 0-3 .67-3 2.5S1.63 10 3 10c.3.08.64.23 1 .41V15h2v-3.45c1.34.86 2.69 1.83 3.48 2.31.16.09.34.14.52.14.52 0 1-.42 1-1V2c0-.58-.48-1-1-1zm0 12c-.38-.23-.89-.58-1.5-1-.16-.11-.33-.22-.5-.34V3.31c.16-.11.31-.2.47-.31.61-.41 1.16-.77 1.53-1v11zm2-6h4v1h-4V7zm0 2l4 2v1l-4-2V9zm4-6v1l-4 2V5l4-2z"></path>
                    break;
                case "video":
                    <path fill-rule="evenodd" d="M15.2 2.09L10 5.72V3c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V9.28l5.2 3.63c.33.23.8 0 .8-.41v-10c0-.41-.47-.64-.8-.41z"></path>
                    break;
                case "external link":
                    <path d="M1 1h7.5l2 2H9L8 2H1v12h10v-1h1v1c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1zm9 6h3v1h-3V7zm2 2h-2v1h2V9zM8.583 4h4.375L15 6v5.429a.58.58 0 0 1-.583.571H8.583A.58.58 0 0 1 8 11.429V10h1v1h5V6.5L12.5 5H9v1H8V4.571A.58.58 0 0 1 8.583 4zM9.5 7H6.667V5l-4 3 4 3V9H9.5V7z"></path>
                    break;
                default:
                    <path d="M1 1h7.5l2 2H9L8 2H1v12h10v-1h1v1c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1zm9 6h3v1h-3V7zm2 2h-2v1h2V9zM8.583 4h4.375L15 6v5.429a.58.58 0 0 1-.583.571H8.583A.58.58 0 0 1 8 11.429V10h1v1h5V6.5L12.5 5H9v1H8V4.571A.58.58 0 0 1 8.583 4zM9.5 7H6.667V5l-4 3 4 3V9H9.5V7z"></path>
                    break;
            }
        }
    </svg>
    <span class="sr-only">@(TileType)</span>
}
